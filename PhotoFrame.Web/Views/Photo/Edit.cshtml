@model PhotoFrame.Web.Models.Photo

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Photo</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FileName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileName)
                @Html.ValidationMessageFor(model => model.FileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FriendlyName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FriendlyName)
                @Html.ValidationMessageFor(model => model.FriendlyName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UploadDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UploadDate)
                @Html.ValidationMessageFor(model => model.UploadDate)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Upload", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="Upload" name="upload" />
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.Bytes, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bytes)
                    @Html.ValidationMessageFor(model => model.Bytes)
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.MimeType, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MimeType)
                    @Html.ValidationMessageFor(model => model.MimeType)
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.FileExtension, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FileExtension)
                    @Html.ValidationMessageFor(model => model.FileExtension)
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        @if (Model.Bytes.Length > 0)
        {
            <div class="form-group">
                <div class="col-md-10">
                    <img src="~/File?id=@Model.Id" alt="avatar" class="mediumImage" />
                </div>
            </div>
        }
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
